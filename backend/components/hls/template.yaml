AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  UserPoolId:
    Type: String

  ApiEndpoint:
    Type: String

  UserPoolClientId:
    Type: String

  TokenUrl:
    Type: String

  AuthRoleName:
    Type: String

  OpenIdAuthLayerArn:
    Type: String

  CodecsParameterName:
    Type: String

  ApiStackName:
    Type: String

  ParentStackName:
    Type: String

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
    Timeout: 30
    MemorySize: 128
    Handler: app.lambda_handler
    Runtime: python3.13
    Architectures:
      - arm64

Resources:
  AuthRolePolicyHls:
    Type: AWS::IAM::RolePolicy
    Properties:
      RoleName: !Ref AuthRoleName
      PolicyName: !Ref AWS::StackName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3-object-lambda:GetObject
            Resource:
              - !GetAtt ObjectLambdaAccessPoint.Arn
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt ObjectLambdaFunction.Arn
            Condition:
              ForAnyValue:StringEquals:
                "aws:CalledVia":
                  - s3-object-lambda.amazonaws.com

  S3AccessPoint:
    Type: AWS::S3::AccessPoint
    Properties:
      Bucket: !ImportValue
        Fn::Sub: ${ApiStackName}-MediaStorageBucket

  ObjectLambdaAccessPoint:
    Type: AWS::S3ObjectLambda::AccessPoint
    Properties:
      Name: !Ref ParentStackName
      ObjectLambdaConfiguration:
        SupportingAccessPoint: !GetAtt S3AccessPoint.Arn
        TransformationConfigurations:
          - Actions:
              - GetObject
            ContentTransformation:
              AwsLambda:
                FunctionArn: !GetAtt ObjectLambdaFunction.Arn

  ObjectLambdaFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: VPC not required
          - id: W92
            reason: ReservedConcurrentExecutions not required
    Properties:
      CodeUri: functions/object-lambda/
      Layers:
        - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python313-arm64:7
        - !Ref OpenIdAuthLayerArn
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: tams-tools
          POWERTOOLS_METRICS_NAMESPACE: TAMS-Tools
          TAMS_ENDPOINT: !Ref ApiEndpoint
          TOKEN_URL: !Ref TokenUrl
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref UserPoolClientId
          DEFAULT_HLS_SEGMENTS: 150
          CODEC_PARAMETER: !Ref CodecsParameterName
          OBJECT_LAMBDA_ACCESS_POINT_ARN: !Sub arn:${AWS::Partition}:s3-object-lambda:${AWS::Region}:${AWS::AccountId}:accesspoint/${ParentStackName}
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:DescribeUserPoolClient
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CodecsParameterName}
            - Effect: Allow
              Action:
                - s3-object-lambda:WriteGetObjectResponse
                - s3-object-lambda:GetObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3-object-lambda:${AWS::Region}:${AWS::AccountId}:accesspoint/${ParentStackName}
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${ParentStackName}-*
              Condition:
                ForAnyValue:StringEquals:
                  "aws:CalledVia":
                    - s3-object-lambda.amazonaws.com

Outputs:
  ObjectLambdaAccessPointArn:
    Value: !GetAtt ObjectLambdaAccessPoint.Arn
